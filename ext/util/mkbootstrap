#!../../miniperl -w -I../lib
# mkbootstrap:
#  This perl script attempts to make a bootstrap file for use by this
# system's DynaLoader. It typically gets called from an extension
# Makefile.
#  I have left all the original comments in to give credit and so
#  that modifications might be easier.  I have changed the script
#  to look for EXT_BS rather than EXT.bsdist to avoid problems on
#  systems with short filenames.
#    Andy Dougherty    <doughera@lafcol.lafayette.edu>
#
# From: Andreas Koenig <k@otto.ww.TU-Berlin.DE>
# Date: Thu, 25 Aug 94 12:47:54 +0200
# 
# The following solution might be fully portable, please check it.  It
# introduces a new convention: There comes no .bs file with the
# distribution, but a _BS file which lists the special cases, like
# posix for berkeley db on the NeXT. 
# 
# This file will get parsed by miniperl, and produce a maybe empty
# @Dynaloader::dl_resolve_using array on the current architecture. That
# one will be extended by $dynaloadlibs, which was computed by Andy's
# extliblist script. If this array still is empty, we do nothing, else
# we write a .bs file with an @Dynaloader::dl_resolve_using array, but
# without an `if', because there is no need to parse special cases for
# the NeXT on a SUN.
# 
# If this solution looks good to you, we end up with a distribution
# without any .bs files at all. For the NeXT we need nothing but a
# DB_File_BS, that comes out of the patch. Andy's script gives
# resolves -lm for the NeXT, which we don't need, but that does not
# hurt.
# 
# Left to do: add the .bs file as a target in make clean. I look after
# that, if my proposal is accepted.
# 
# From: Tim Bunce <Tim.Bunce@ig.co.uk>
# Date: Thu, 25 Aug 1994 16:30:48 +0100
# Basically I've...
# 
#   used -I$TOP/lib to find Config.pm
# 
#   used -w to check for problems in the _BS files
# 
#   added $osname to match DynaLoader
# 
#   added a description an 'autogenerated' warning to the .bs file
# 
#   added a mechanism to allow the _BS script to put some code into
#   the generated .bs file by placing it in $bscode. This is a handy
#   'escape' mechanism that may prove useful in complex situations.
# 
# Tim Bunce. 

$bscode="";
chop($pwd=`pwd`);
$pwd =~ s:.*/::;
if (-f "${pwd}_BS"){
	use Config;
	# supply some handy variables (same as DynaLoader does)
	$osname=$dlsrc=""; # set here to avoid typo warning
	($osname, $dlsrc)=@Config{qw(osname dlsrc)};
	require "${pwd}_BS";
}
unshift @DynaLoader::dl_resolve_using, @ARGV;
exit 0 unless @DynaLoader::dl_resolve_using;
open BS, ">$pwd.bs";
print BS "# $pwd DynaLoader bootstrap file for $osname.\n";
print BS "# Do not edit this file, changes will be lost.\n";
print BS "# This file was automatically generated by extliblist.\n";
print BS "\@DynaLoader::dl_resolve_using = qw(";
print BS "@DynaLoader::dl_resolve_using";
print BS ");\n";
print BS $bscode if $bscode;
close BS;
