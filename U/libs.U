?RCS: $Id: libs.U,v 3.0.1.3 1994/06/20 07:05:44 ram Exp $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log: libs.U,v $
?RCS: Revision 3.0.1.3  1994/06/20  07:05:44  ram
?RCS: patch30: code cleanup with if/elif by ADO and RAM
?RCS: patch30: undone patch23 for libswanted default setting
?RCS:
?RCS: Revision 3.0.1.2  1994/05/06  15:08:45  ram
?RCS: patch23: now includes ordered default libswanted variable (ADO)
?RCS: patch23: major cleanup for library lookups (ADO)
?RCS:
?RCS: Revision 3.0.1.1  1993/08/25  14:02:31  ram
?RCS: patch6: added default for libs
?RCS:
?RCS: Revision 3.0  1993/08/18  12:09:03  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:libs libnames: test cat Myread Oldconfig Loc libpth package so sed
?MAKE:	-pick add $@ %<
?S:libs:
?S:	This variable holds the additional libraries we want to use.
?S:	It is up to the Makefile to deal with it.
?S:.
?S:libnames:
?S:	This variable contains the full pathnames of the libraries used
?S:	to compile the package.   This is later used for nm extraction
?S:	in libc.U.  libc is NOT included in this list.
?S:.
?T:fullname thislib thispth libswanted
?D:libs=''
?X:
?X: This order is chosen so that libraries  -lndir, -ldir, -lucb, -lbsd,
?X: -lBSD, -lPW, and -lx only get used if there are unresolved
?X: routines at link time.  Usually, these are backwards compatability
?X: libraries, and may not be as reliable as the standard c library.
?X:
?X: The -lsocket -linet -lnsl order has been reported to be necessary
?X: for at least one SVR4 implementation.
?X: -lc must proceed -lucb or -lbsd for most Solaris applications.
?X: -lc_s proceeds -lc so we pick up the shared library version, if
?X: it is available.
?X:
?X: The ordering of c, posix, and cposix is a guess and almost
?X: certainly wrong on about half of all systems.
?X:
?X: Set proper libswanted in your private Myinit.U if needed.
?X:
?X:: default ordered library list
?X:libswanted='net socket inet nsl nm ndbm sdbm gdbm dbm malloc dl'
?X:libswanted="$libswanted dld sun m c_s c posix cposix ndir dir ucb"
?X:libswanted="$libswanted bsd BSD PW x"
?X:
: Looking for optional libraries
echo " "
echo "Checking for optional libraries..." >&4

?X: Comparisons via case statement use the string " $dflt " to ensure that
?X: each library is separated by a space. That way, by looking to something
?X: like *"-l$thatlib "*, we ensure we find -lm and not -lmalloc (which was
?X: the case with the old looking pattern *-l$thatlib*.
?X:
?X: We'll search through $libpth in order.  Some systems (e.g. HP-UX)
?X: have archive versions in one library /lib/pa1.1 and shared versions
?X: in another library, e.g. /usr/lib.  We want to be sure we pick up
?X:	the right one.
?X:
?X:	filenames of the form lib$thislib.so.* present a special challenge
?X:	since there might be multiple ones around, and we want the highest
?X:	version number.
?X:
dflt=''
for thislib in $libswanted; do
	for thispth in $libpth; do
		fullname=`echo $thispth/lib$thislib.$so.[0-9]* |
			tr ' ' '\012' | tail -1`
		if $test -f $fullname; then
			break
		elif fullname=$thispth/lib$thislib.$so && $test -f $fullname; then
			break
		elif fullname=$thispth/lib${thislib}_s.a && $test -f $fullname; then
			thislib=${thislib}_s
			break
		elif fullname=$thispth/lib${thislib}.a && $test -f $fullname; then
			break
		elif fullname=$thispth/Slib${thislib}.a && $test -f $fullname; then
			break
		else
			fullname=''
		fi
	done
	case $fullname in 
	'') echo "No -l$thislib"
		;;
	*)	case " $dflt " in
		*" -l$thislib "*) ;;
		*)	dflt="$dflt -l$thislib" 
			echo "Found -l$thislib		$fullname"
			;;
		esac
		;;
	esac
done
set X $dflt
shift
dflt="$*"
: Allow hint file or old config.sh to override
case "$libs" in
'') dflt="$dflt";;
*) dflt="$libs";;
esac
case "$dflt" in
' '|'') dflt='none';;
esac

$cat <<EOM
 
If your system needs any libraries to compile $package, include 
them here.  Say "none" for none.
EOM

echo " "
rp="Any libraries?"
. ./myread
case "$ans" in
none) libs=' ';;
*) libs="$ans";;
esac

?X:	Now figure out full filenames.  We need to do this again because
?X:	the user may have asked for a library that we hadn't anticipated.
?X:	(I suppose we could cache the values and only check for new ones,
?X:	but it's probably not worth the trouble.)
libnames=''
: C library is taken care of elsewhere, in libc.U
for thislib in `echo " $libs " | $sed -e 's/-l/ /g' -e 's/ c / /'` ; do
	for thispth in $libpth; do
		fullname=`echo $thispth/lib$thislib.$so.[0-9]* | 
			tr ' ' '\012' | tail -1`
		if $test -f $fullname; then
			break
		elif fullname=$thispth/lib$thislib.$so && $test -f $fullname; then
			break
		elif fullname=$thispth/lib${thislib}_s.a && $test -f $fullname; then
			break
		elif fullname=$thispth/lib${thislib}.a && $test -f $fullname; then
			break
		elif fullname=$thispth/Slib${thislib}.a && $test -f $fullname; then
			break
		else
			fullname=''
		fi
	done
	libnames="$libnames $fullname"
done
set X $libnames
shift
libnames="$*"

