?RCS: $Id: d_pathconf.U$
?RCS:
?RCS: Original Author: Andy Dougherty <doughera@lafcol.lafayette.edu>
?RCS:
?RCS: $Log: d_pathconf.U,v $
?RCS:
?MAKE:d_pathconf d_fpathconf: Inlibc
?MAKE:	-pick add $@ %<
?S:d_pathconf:
?S:	This variable conditionally defines the HAS_PATHCONF symbol, which
?S:	indicates to the C program that the pathconf() routine is available
?S:	to determine file-system related limits and options associated
?S:	with a given filename.
?S:.
?S:d_fpathconf:
?S:	This variable conditionally defines the HAS_FPATHCONF symbol, which
?S:	indicates to the C program that the pathconf() routine is available
?S:	to determine file-system related limits and options associated
?S:	with a given open file descriptor.
?S:.
?C:HAS_PATHCONF:
?C:	This symbol, if defined, indicates that pathconf() is available
?C:	to determine file-system related limits and options associated
?C:	with a given filename.
?C:.
?C:HAS_FPATHCONF:
?C:	This symbol, if defined, indicates that pathconf() is available
?C:	to determine file-system related limits and options associated
?C:	with a given open file descriptor.
?C:.
?H:#$d_pathconf HAS_PATHCONF		/**/
?H:#$d_fpathconf HAS_FPATHCONF		/**/
?H:.
?LINT:set d_pathconf
?LINT:set d_fpathconf
: see if pathconf exists
set pathconf d_pathconf
eval $inlibc

: see if fpathconf exists
set fpathconf d_fpathconf
eval $inlibc

