?RCS: $Id: d_attrib.U,v $
?RCS:
?RCS: $Log: d_attrib.U,v $
?RCS:
?MAKE:d_attrib: Myread Oldconfig cat cc ccflags rm Setvar contains
?MAKE:	-pick add $@ %<
?S:d_attrib:
?S:	This variable conditionally defines GNUC_ATTRIBUTE_CHECK, which
?S:	indicates the C compiler can check for function attributes,
?S:	such as printf formats.
?S:.
?C:GNUC_ATTRIBUTE_CHECK:
?C:	This symbol indicates the C compiler can check for function attributes,
?C:	such as printf formats.
?C:.
?H:#$d_attrib 	GNUC_ATTRIBUTE_CHECK 	/* */
?H:.
?LINT:set d_attrib
: Look for GNUC style attribute checking
echo " "
echo "Checking whether your compiler can handle __attribute__ ..." >&4
$cat >attrib.c <<'EOCP'
void	croak (char* pat,...) __attribute__((format(printf,1,2),noreturn));
EOCP
if $cc $ccflags -c attrib.c >attrib.out 2>&1 ; then
	if $contains 'warning' attrib.out >/dev/null 2>&1; then
		echo "Your C compiler doesn't fully support __attribute__. ."
		val="$undef"
	else
		echo "Your C compiler supports __attribute__. ."
		val="$define"
	fi
else
	echo "Your C compiler doesn't seem to understand __attribute__. ."
	val="$undef"
fi
set d_attrib
eval $setvar
$rm -f attrib*

