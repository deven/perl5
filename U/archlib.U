?RCS: $Id: archlib.U,v $
?RCS:
?RCS: 
?RCS: $Log: archlib.U,v $
?RCS:
?MAKE:d_archlib archlib archlibexp installarchlib archname: afs package \
	cat Getfile Loc Oldconfig prefix privlib osname test
?MAKE:	-pick add $@ %<
?S:d_archlib:
?S:	This variable conditionally defines ARCHLIB to hold the pathname
?S:	of architecture-dependent library files for $package.  If
?S:	$archlib is the same as $privlib, then this is set to undef.
?S:.
?S:archname:
?S:	This variable is a short name to characterize the current
?S:	architecture.  It is used to construct the default archlib.
?S:.
?S:archlib:
?S:	This variable holds the name of the directory in which the user wants
?S:	to put architecture-dependent public library files for $package.
?S:	It is most often a local directory such as /usr/local/lib.
?S:	Programs using this variable must be prepared to deal 
?S:	with filename expansion.
?S:.
?S:archlibexp:
?S:	This variable is the same as the archlib variable, but is 
?S:	filename expanded at configuration time, for convenient use.
?S:.
?S:installarchlib:
?S:	This variable is really the same as archlibexp but may differ on
?S:	those systems using AFS. For extra portability, only this variable
?S:	should be used in makefiles.
?S:.
?C:ARCHLIB:
?C:	This variable, if defined, holds the name of the directory in
?C:	which the user wants to put architecture-dependent public
?C:	library files for $package.  It is most often a local directory
?C:	such as /usr/local/lib.  Programs using this variable must be
?C:	prepared to deal with filename expansion.  If ARCHLIB is the
?C:	same as PRIVLIB, it is not defined, since presumably the
?C:	program already searches PRIVLIB.
?C:.
?C:ARCHLIB_EXP:
?C:	This symbol contains the ~name expanded version of ARCHLIB, to be used
?C:	in programs that are not prepared to deal with ~ expansion at run-time.
?C:.
?H:#$d_archlib ARCHLIB "$archlib"		/**/
?H:#$d_archlib ARCHLIB_EXP "$archlibexp"		/**/
?H:.
?T: tpath xxx tarchname
: determine where public architecture dependent libraries go
case "$archname" in
'')	tpath=`echo $PATH | sed -e 's/:/ /g'`
	xxx=`./loc arch blurfl $tpath`
	if test -f "$xxx"; then
		tarchname=`arch`
		archname="${tarchname}-${osname}"
	else
		archname="$osname"
	fi
	;;
esac
case "$privlib" in
'') dflt=`./loc . "." $prefix/lib /usr/local/lib /usr/lib /lib`;;
*)  dflt="$privlib/$archname";;
esac
fn=d~
cat <<EOM

$package contains architecture-dependent library files.  If you are
sharing libraries in a heterogeneous environment, you might store
these files in a separate location.  Otherwise, you can just include
them with the rest of the public library files.

EOM
rp='Where do you want to put the public architecture-dependent libraries?'
. ./getfile
archlib="$ans"
archlibexp="$ansexp"

if $afs; then
	$cat <<EOM

Since you are running AFS, I need to distinguish the directory in which
private files reside from the directory in which they are installed (and from
which they are presumably copied to the former directory by occult means).

EOM
	case "$installarchlib" in
	'') dflt=`echo $archlibexp | sed 's#^/afs/#/afs/.#'`;;
	*) dflt="$installarchlib";;
	esac
	fn=de~
	rp='Where will architecture-dependent library files be installed?'
	. ./getfile
	installarchlib="$ans"
else
	installarchlib="$archlibexp"
fi
if $test X"$archlib" = X"$privlib"; then
	d_archlib="$undef"
else
	d_archlib="$define"
fi


